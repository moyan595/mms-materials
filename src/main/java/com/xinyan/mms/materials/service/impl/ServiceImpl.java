package com.xinyan.mms.materials.service.impl;import com.xinyan.mms.materials.dao.Dao;import com.xinyan.mms.materials.dao.impl.DaoImpl;import com.xinyan.mms.materials.pojo.*;import com.xinyan.mms.materials.query.*;import com.xinyan.mms.materials.service.Service;import java.util.*;public class ServiceImpl        implements Service {    private Dao dao = new DaoImpl();    @Override    public void sadd_tab_materials( Tab_Materials tab_materials ) {        dao.add_tab_materials(tab_materials);    }    @Override    public void sadd_Tab_Warehouse( Tab_Warehouse tab_warehouse ) {        dao.add_Tab_Warehouse(tab_warehouse);    }    //组合两个查询功能    @Override    public List <QueryListPage> squery() {        return null;    }    //查询物料功能    @Override    public List <QueryTab_Materials> smateriasl( QueryTab_Materials QueryTab_Materials ) {        return dao.materials(QueryTab_Materials);    }    //查询库存功能    @Override    public List <QueryWarehouse> swarehouse( QueryWarehouse QueryWarehouse ) {        return dao.warehouse(QueryWarehouse);    }    @Override    public List <QueryTab_Warehouse> SQueryTab_Warehouse( ) {        return dao.DQueryTab_Warehouse();    }    //修改前查询一下    @Override    public QueryTab_Materials SQueryUpdatem( String SQueryUpdatem ) {        return dao.QueryUpdatem(SQueryUpdatem);    }    @Override    public QueryWarehouse SQueryUpdatew( String SQueryWarehousew ) {        return dao.QueryUpdatew(SQueryWarehousew);    }    //更新修改模块    /**     * 更新物料     * @param tab_materials     */    @Override    public void updateM( Tab_Materials tab_materials ) {        dao.updateM(tab_materials);    }    /**     * 更新库存     * @param tab_warehouse     */    @Override    public void updateW( Tab_Warehouse tab_warehouse ) {        dao.updateW(tab_warehouse);    }    /**     * 删除功能     * @param delete     */    @Override    public void sdelete( String delete ) {//        System.out.println("服务层获取到要删除的ID" + delete);        dao.deletematerials(delete);        dao.deletewarehouse(delete);    }    /**     * 页面展示     * @return     */    @Override    public List <QueryListPage> slistpage( ) {        List <QueryListPage> sistPage = new ArrayList <>();        List <QueryTab_Materials> queryTab_Materials = dao.DQueryTab_Materials();        List <QueryType_Dictionary> queryType_Dictionary = dao.DQueryType_Dictionary();        List <QueryUnit_Dictionary> queryUnit_Dictionary = dao.DQueryUnit_Dictionary();        List <QueryWarehouse> queryWarehouses = dao.listWarehouse();        //包装        for ( QueryTab_Materials tab_materials : queryTab_Materials ) {            QueryListPage queryListPage = new QueryListPage();            int tab_materials_id = tab_materials.getMaterials_id();            String tab_materials_coding = tab_materials.getMaterials_coding();            String tab_materials_name = tab_materials.getMaterials_name();            String tab_materialsl_specification = tab_materials.getMaterials_specification();            //保存到实体类            queryListPage.setMaterials_id(tab_materials_id);            queryListPage.setMaterials_coding(tab_materials_coding);            queryListPage.setMaterials_name(tab_materials_name);            queryListPage.setMaterials_specification(tab_materialsl_specification);            String mstatus_coding = tab_materials.getMaterials_status() == 1 ? "停用" : "使用中";            queryListPage.setStatus_coding(mstatus_coding);            //类型            for ( QueryType_Dictionary Type_Dictionary : queryType_Dictionary ) {                if (tab_materials.getType_coding() == Type_Dictionary.getType_coding()) {                    String type_name = Type_Dictionary.getType_name();                    queryListPage.setType_name(type_name);                }            }            //单位            for ( QueryUnit_Dictionary QueryUnit : queryUnit_Dictionary ) {                if (tab_materials.getUnit_coding() == QueryUnit.getUnit_coding()) {                    String unit_name = QueryUnit.getUnit_name();                    queryListPage.setUnit_name(unit_name);                }            }            for ( QueryWarehouse qw : queryWarehouses ) {                if (tab_materials.getMaterials_coding() == qw.getMaterials_coding()) {                    String wmaterials_coding = qw.getMaterials_coding();                    String stoe_name = qw.getStore_name();                    String warehouse_warningvalue = qw.getWarehouse_warningvalue();                    String warehouse_stockquantity = qw.getWarehouse_stockquantity();                    String warehouse_remark = qw.getWarehouse_remark();                    queryListPage.setWmaterials_coding(wmaterials_coding);                    queryListPage.setStore_name(stoe_name);                    queryListPage.setWarehouse_warningvalue(warehouse_warningvalue);                    queryListPage.setWarehouse_stockquantity(warehouse_stockquantity);                    queryListPage.setWarehouse_remark(warehouse_remark);                }            }            //添加到集合里面            sistPage.add(queryListPage);//            System.out.println(sistPage);        }        return sistPage;    }    @Override    public List <Warehouse> squeryWarehouse( QueryWarehouse queryWarehouse ) {        return dao.DQueryWarehouse(queryWarehouse);    }    @Override    public List <QueryStore_Dictionary> SQueryStore_Dictionary( ) {        return dao.DQueryStore_Dictionary();    }    @Override    public List <QueryType_Dictionary> SQueryType_Dictionary( ) {        return dao.DQueryType_Dictionary();    }    @Override    public List <QueryUnit_Dictionary> SQueryUnit_Dictionary( ) {        return dao.DQueryUnit_Dictionary();    }    @Override    public void statust( String statust ) {        dao.statust(statust);    }    @Override    public void statusp( String statusp ) {        dao.statusp(statusp);    }}